# Load required libraries
library(pheatmap)
library(RColorBrewer)
library(gtools)  # for natural sorting

# Load data
data <- read.csv("/Users/unek/Desktop/hmdb_metabolites.csv", row.names = 1)

# Transpose (rows = samples, columns = features)
data_t <- t(data)

# Log2 transformation
data_log <- log2(data_t + 1)

# Z-score normalization
data_z <- scale(data_log)

# Select top N features by variance
top_n <- 87
top_features <- names(sort(apply(data_z, 2, var), decreasing = TRUE)[1:top_n])
data_top <- data_z[, top_features]

# Standardize sample names for natural sorting
rownames(data_top) <- gsub("_(\\d)(?!\\d)", "_0\\1", rownames(data_top), perl = TRUE)

# Extract groups and annotate
cell_groups <- sub("_.*", "", rownames(data_top))
annotation_col <- data.frame(Group = cell_groups, row.names = rownames(data_top))

# Define group colors
group_order <- c("HA", "GIN8", "GIN28", "GIN31")
group_palette <- c(HA = "#00A651", GIN8 = "#5DA5DA", GIN28 = "#2171B5", GIN31 = "#08306B")
ann_colors <- list(Group = group_palette)

# Order samples by group and index
group_ordered_samples <- unlist(lapply(group_order, function(g) {
  mixedsort(grep(paste0("^", g), rownames(data_top), value = TRUE))
}))
data_top_ordered <- data_top[group_ordered_samples, ]
annotation_col <- annotation_col[group_ordered_samples, , drop = FALSE]

# Order features by dominant expression
group_means <- aggregate(data_top_ordered, by = list(annotation_col$Group), FUN = mean)
rownames(group_means) <- group_means$Group.1
group_means <- group_means[, -1]
feature_order <- order(apply(group_means, 2, function(x) names(which.max(x))))
data_top_ordered_grouped <- t(data_top_ordered)[feature_order, ]

# Save heatmap as PNG
png("/Users/unek/Desktop/RandomForest_Heatmap.png", width = 1600, height = 1200, res = 150)
pheatmap(data_top_ordered_grouped,
         cluster_rows = TRUE,
         cluster_cols = FALSE,
         annotation_col = annotation_col,
         annotation_colors = ann_colors,
         color = colorRampPalette(rev(brewer.pal(10, "RdBu")))(100),
         show_colnames = TRUE,
         show_rownames = TRUE,
         fontsize_row = 4,
         fontsize_col = 5,
         angle_col = 45,
         border_color = NA,
         main = "Single-Cell Annotated Metabolites")
dev.off()
