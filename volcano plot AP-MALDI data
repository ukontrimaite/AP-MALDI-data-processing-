# Load necessary libraries
library(ggplot2)
library(dplyr)

# Load the data, and keep m/z as a column (don't set as rownames yet)
data_path <- "/Users/unek/Desktop/group_gin_GlobalGIN_HA_combined_preprocessed_random_forest_mad5locmin.csv"
data_raw <- read.csv(data_path, check.names = FALSE)

# Extract m/z values and store them
mz_values <- data_raw[[1]]  # Assuming first column has m/z
data <- data_raw[ , -1]     # Remove the m/z column for now
rownames(data) <- mz_values # Set rownames temporarily for processing

# Extract GIN and HA sample column names
gin_samples <- grep("^GIN", colnames(data), value = TRUE)
ha_samples  <- grep("^HA", colnames(data), value = TRUE)

# Initialize list to store volcano plot results
volcano_results <- list()

# Loop through each feature (row) to calculate log2FC and perform Wilcoxon test
for (i in 1:nrow(data)) {
  mz <- rownames(data)[i]  # m/z or feature name
  
  # Extract raw intensity values
  gin_raw <- as.numeric(data[i, gin_samples])
  ha_raw  <- as.numeric(data[i, ha_samples])
  
  # Skip if missing values are present
  if (any(is.na(gin_raw)) | any(is.na(ha_raw))) next
  
  # Calculate raw fold change (before log transform)
  raw_fold_change <- median(gin_raw) / median(ha_raw)
  
  # Apply log10 transformation with small pseudocount to avoid log(0)
  gin_values <- log10(gin_raw + 1e-8)
  ha_values  <- log10(ha_raw + 1e-8)
  
  # Perform Mann–Whitney U test (Wilcoxon rank-sum)
  test_result <- tryCatch({
    wilcox.test(gin_values, ha_values, alternative = "two.sided")
  }, warning = function(w) {
    NULL
  }, error = function(e) {
    return(NULL)
  })
  
  if (is.null(test_result)) next  # Skip if test failed
  p_value <- test_result$p.value
  
  # Calculate log2 fold change from log10-transformed medians
  fold_change <- median(gin_values) - median(ha_values)  # log10 scale difference
  log2fc <- fold_change * log2(10)  # Convert log10 difference to log2
  
  # Ensure no zero p-values
  p_value <- ifelse(p_value == 0, 1e-10, p_value)
  log10p_value <- -log10(p_value)
  
  # Store result
  volcano_results[[i]] <- data.frame(
    mz = mz,
    log2FC = log2fc,
    raw_fold_change = raw_fold_change,
    p_value = p_value,
    log10_p_value = log10p_value
  )
}

# Combine all results into a single data frame
volcano_df <- do.call(rbind, volcano_results)

# Remove any NA rows
volcano_df <- volcano_df[complete.cases(volcano_df), ]

# Adjust p-values using Benjamini-Hochberg FDR
volcano_df$adj_p_value <- p.adjust(volcano_df$p_value, method = "fdr")

# Categorize significance
volcano_df$Significance <- "Not Significant"
volcano_df$Significance[volcano_df$adj_p_value < 0.05 & volcano_df$log2FC > 1]  <- "Upregulated"
volcano_df$Significance[volcano_df$adj_p_value < 0.05 & volcano_df$log2FC < -1] <- "Downregulated"

# Calculate limits for the volcano plot
max_log2fc <- max(volcano_df$log2FC, na.rm = TRUE)
min_log2fc <- min(volcano_df$log2FC, na.rm = TRUE)
x_range_padding <- max(abs(min_log2fc), abs(max_log2fc)) + 1

# Generate volcano plot
volcano_plot <- ggplot(volcano_df, aes(x = log2FC, y = -log10(adj_p_value), color = Significance)) +
  geom_point(alpha = 0.8, size = 3) +
  scale_color_manual(values = c(
    "Upregulated" = "#E57373",
    "Downregulated" = "#4682B4",
    "Not Significant" = "lightgray"
  )) +
  geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "black", size = 0.8) +
  geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "black", size = 0.8) +
  xlim(-x_range_padding, x_range_padding) +
  ylim(0, 20) +
  labs(
    title = "Volcano Plot: GIN vs HA",
    x = "log₂ Fold Change",
    y = "-log₁₀ Adjusted p-value"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.title = element_blank(),
    legend.position = "top",
    panel.grid = element_blank()
  )

# Print the volcano plot
print(volcano_plot)

# Save volcano plot and results table
ggsave("/Users/unek/Desktop/volcano_plot_GIN_vs_HA_adjusted.png", plot = volcano_plot, width = 10, height = 6)
write.csv(volcano_df, "/Users/unek/Desktop/volcano_results_GIN_vs_HA.csv", row.names = FALSE)
