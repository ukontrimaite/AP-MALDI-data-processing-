# 📦 Load required libraries
library(pheatmap)
library(RColorBrewer)
library(gtools)  # for natural sorting

# 📂 Load your data (assumes first column is 'Annotation')
data <- read.csv("/Users/unek/Desktop/Random_forest.csv", row.names = 1)

# 🔁 Transpose: rows = samples (cells), columns = features (metabolites)
data_t <- t(data)

# 🧪 Log2 transformation to reduce skew
data_log <- log2(data_t + 1)

# 🔬 Z-score normalization per feature
data_z <- scale(data_log)

# 📊 Select top N features (already Random Forest-selected)
top_n <- 13  # change if needed
vars <- apply(data_z, 2, var)
top_features <- names(sort(vars, decreasing = TRUE)[1:top_n])
data_top <- data_z[, top_features]

# 🧬 Standardize sample names to support natural sorting (e.g. HA_01 instead of HA_1)
rownames(data_top) <- gsub("_(\\d)(?!\\d)", "_0\\1", rownames(data_top), perl = TRUE)

# Extract group names
cell_groups <- sub("_.*", "", rownames(data_top))
annotation_col <- data.frame(Group = cell_groups)
rownames(annotation_col) <- rownames(data_top)

# 🎨 Define group colors
group_order <- c("HA", "GIN8", "GIN28", "GIN31")  # desired group order
group_palette <- RColorBrewer::brewer.pal(max(3, length(group_order)), "Set1")
names(group_palette) <- group_order
ann_colors <- list(Group = group_palette)

# 🔠 Sort samples by group order and numeric order within each group
group_ordered_samples <- unlist(lapply(group_order, function(g) {
  mixedsort(grep(paste0("^", g), rownames(data_top), value = TRUE))
}))
data_top_ordered <- data_top[group_ordered_samples, ]
annotation_col <- annotation_col[group_ordered_samples, , drop = FALSE]

# 🔍 Group metabolites by dominant expression
group_means <- aggregate(data_top_ordered, by = list(annotation_col$Group), FUN = mean)
rownames(group_means) <- group_means$Group.1
group_means <- group_means[, -1]

feature_dominant_group <- apply(group_means, 2, function(x) names(which.max(x)))
feature_order <- order(feature_dominant_group)
data_top_ordered_grouped <- t(data_top_ordered)[feature_order, ]

# 📤 Save heatmap as PNG
png("RandomForest_Heatmap.png", width = 1600, height = 1200, res = 150)

# 🔥 Plot the heatmap
pheatmap(data_top_ordered_grouped,
         cluster_rows = FALSE,
         cluster_cols = FALSE,  # group order preserved
         annotation_col = annotation_col,
         annotation_colors = ann_colors,
         color = colorRampPalette(rev(brewer.pal(11, "RdBu")))(100),
         show_colnames = TRUE,
         show_rownames = TRUE,
         fontsize_row = 10,
         fontsize_col = 8,
         angle_col = 45,
         border_color = NA,
         main = "Top Discriminatory Metabolites (Random Forest)")

# 📤 Close PNG output
dev.off()

